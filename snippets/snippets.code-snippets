{
    // Control Section
    "Elementor TAB CONTENT": {
		"prefix": "el_tab_content",
		"body": [
			"\\$this->start_controls_section(",
			"\t'_content_$1',",
			"\t[",
			"\t\t'label' => esc_html__( '$2',  'rsaddon'  ),",
			"\t\t'tab' => Controls_Manager::TAB_CONTENT,",
			"\t]",
			");",
			"",
			"$3",
			"",
			"\\$this->end_controls_section();"
		],
		"description": "Elementor Section TAB CONTENT"
	},
	"Elementor TAB STYLE": {
		"prefix": "el_tab_style",
		"body": [
			"\\$this->start_controls_section(",
			"\t'_style_$1',",
			"\t[",
			"\t\t'label' => esc_html__( '$2',  'rsaddon'  ),",
			"\t\t'tab' => Controls_Manager::TAB_STYLE,",
			"\t]",
			");",
			"",
			"$3",
			"",
			"\\$this->end_controls_section();"
		],
		"description": "Elementor Section TAB STYLE"
	},

    // Control Tabs
    "Elementor Controls Tabs Two Column": {
		"prefix": "elc_tabs_two",
		"body": [
			"\\$this->start_controls_tabs( '$1_tabs' );",
			"",
			"\\$this->start_controls_tab(",
			"\t'$2_normal_tab',",
			"\t[",
			"\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
			"\t]",
			");",
			"",
			"$3",
			"",
			"\\$this->end_controls_tab();",
			"",
			"\\$this->start_controls_tab(",
			"\t'$4_hover_tab',",
			"\t[",
			"\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
			"\t]",
			");",
			"",
			"$5",
			"",
			"\\$this->end_controls_tab();",
			"",
			"\\$this->end_controls_tabs();"
		],
		"description": "Elementor Controls Tabs Two Column"
	},
	"Elementor Controls Tabs Three Column": {
		"prefix": "elc_tabs_three",
		"body": [
			"\\$this->start_controls_tabs( '$1_tabs' );",
			"",
			"\\$this->start_controls_tab(",
			"\t'$2_normal_tab',",
			"\t[",
			"\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
			"\t]",
			");",
			"",
			"$3",
			"",
			"\\$this->end_controls_tab();",
			"",
			"\\$this->start_controls_tab(",
			"\t'$4_hover_tab',",
			"\t[",
			"\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
			"\t]",
			");",
			"",
			"$5",
			"",
			"\\$this->end_controls_tab();",
			"",
			"\\$this->end_controls_tabs();",
			"",
			"\\$this->start_controls_tab(",
			"\t'$6_active_tab',",
			"\t[",
			"\t\t'label' => esc_html__( 'Active', 'rsaddon' ),",
			"\t]",
			");",
			"",
			"$7",
			"",
			"\\$this->end_controls_tab();",
			"",
			"\\$this->end_controls_tabs();"
		],
		"description": "Elementor Controls Tabs Three Column"
	},

    // Data Controls
    "Elementor Control: Text": {
        "prefix": "el_text",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$3', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Text"
    },
    "Elementor Control: Number": {
        "prefix": "el_number",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::NUMBER,",
            "\t\t'min' => $3,",
            "\t\t'max' => $4,",
            "\t\t'step' => $5,",
            "\t\t'default' => $6,",
            "\t\t'label_block' => true,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Number"
    },
    "Elementor Control: Textarea": {
        "prefix": "el_textarea",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXTAREA,",
            "\t\t'rows' => 10,",
            "\t\t'default' => __( '$3', 'rsaddon' ),",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Textarea"
    },
    "Elementor Control: Wysiwyg": {
        "prefix": "el_wysiwyg",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::WYSIWYG,",
            "\t\t'default' => __( '$3', 'rsaddon' ),",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Wysiwyg"
    },
    "Elementor Control: Code": {
        "prefix": "el_code",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CODE,",
            "\t\t'language' => 'html',",
            "\t\t'rows' => 20,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Code"
    },
    "Elementor Control: Hidden": {
        "prefix": "el_hidden",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HIDDEN,",
            "\t\t'default' => '$3',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Hidden"
    },
    "Elementor Control: Switcher": {
        "prefix": "el_switcher",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SWITCHER,",
            "\t\t'label_on' => esc_html__( 'Show', 'rsaddon' ),",
            "\t\t'label_off' => esc_html__( 'Hide', 'rsaddon' ),",
            "\t\t'return_value' => 'yes',",
            "\t\t'default' => 'yes',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Switcher"
    },
    "Elementor Control: Popover Toggle": {
        "prefix": "el_popover_toggle",
        "body": [
            "\\$this->add_control(",
            "\t'$1_popover_toggle',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::POPOVER_TOGGLE,",
            "\t\t'label_off' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t'label_on' => esc_html__( 'Custom', 'rsaddon' ),",
            "\t\t'return_value' => 'yes',",
            "\t\t'default' => 'yes',",
            "\t]",
            ");",
            "",
            "\\$this->start_popover();",
            "",
            "$3",
            "",
            "\\$this->end_popover();"
        ],
        "description": "Elementor Control: Popover Toggle"
    },
    "Elementor Control: Select": {
        "prefix": "el_select",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '$3',",
            "\t\t'options' => [",
            "\t\t\t'$4' => esc_html__( '$5', 'rsaddon' ),",
            "\t\t\t'$6' => esc_html__( '$7', 'rsaddon' ),",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Select"
    },
    "Elementor Control: Select2": {
        "prefix": "el_select2",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT2,",
            "\t\t'label_block' => true,",
            "\t\t'multiple' => true,",
            "\t\t'options' => [",
            "\t\t\t'$3'  => esc_html__( '$4', 'rsaddon' ),",
            "\t\t\t'$5' => esc_html__( '$6', 'rsaddon' ),",
            "\t\t\t'$7' => esc_html__( '$8', 'rsaddon' ),",
            "\t\t],",
            "\t\t'default' => [ '$9', '$10' ],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Select2"
    },
    "Elementor Control: Choose": {
        "prefix": "el_choose",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'left' => [",
            "\t\t\t\t'title' => esc_html__( 'Left', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-left',",
            "\t\t\t],",
            "\t\t\t'center' => [",
            "\t\t\t\t'title' => esc_html__( 'Center', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-center',",
            "\t\t\t],",
            "\t\t\t'right' => [",
            "\t\t\t\t'title' => esc_html__( 'Right', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-right',",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default' => '$3',",
            "\t\t'toggle' => true,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Choose"
    },
    "Elementor Control: Color": {
        "prefix": "el_color",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $3' => '$4: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Color"
    },
    "Elementor Control: Font Family": {
        "prefix": "el_font_family",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::FONT,",
            "\t\t'default' => \"'Open Sans', sans-serif\",",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $3' => 'font-family: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Font Family"
    },
    "Elementor Control: Date Time": {
        "prefix": "el_date_time",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'textdomain' ),",
            "\t\t'type' => Controls_Manager::DATE_TIME,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Date Time"
    },
    "Elementor Control: Gallery": {
        "prefix": "el_gallery",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::GALLERY,",
            "\t\t'show_label' => false,",
            "\t\t'default' => [],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Gallery"
    },
    "Elementor Control: Repeater Fields Array": {
        "prefix": "el_repeater_fields_array",
        "body": [
            "\\$this->add_control(",
            "\t'$1_list',",
            "\t[",
            "\t\t'label' => esc_html__( '$2 List', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::REPEATER,",
            "\t\t'fields' => [",
            "\t\t\t[",
            "\t\t\t\t'name' => 'list_title',",
            "\t\t\t\t'label' => esc_html__( 'Title', 'rsaddon' ),",
            "\t\t\t\t'type' => Controls_Manager::TEXT,",
            "\t\t\t\t'default' => __( 'List Title', 'rsaddon' ),",
            "\t\t\t\t'label_block' => true,",
            "\t\t\t],",
            "\t\t\t[",
            "\t\t\t\t'name' => 'list_content',",
            "\t\t\t\t'label' => esc_html__( 'Content', 'rsaddon' ),",
            "\t\t\t\t'type' => Controls_Manager::WYSIWYG,",
            "\t\t\t\t'default' => __( 'List Content', 'rsaddon' ),",
            "\t\t\t\t'show_label' => false,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default' => [",
            "\t\t\t[",
            "\t\t\t\t'list_title' => __( 'Title #1', 'rsaddon' ),",
            "\t\t\t\t'list_content' => __( 'Item content. Click the edit button to change this text.', 'rsaddon' ),",
            "\t\t\t],",
            "\t\t\t[",
            "\t\t\t\t'list_title' => __( 'Title #2', 'rsaddon' ),",
            "\t\t\t\t'list_content' => __( 'Item content. Click the edit button to change this text.', 'rsaddon' ),",
            "\t\t\t],",
            "\t\t],",
            "\t\t'title_field' => '{{{ list_title }}}',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Repeater Fields Array"
    },
    "Elementor Control: Repeater Class": {
        "prefix": "el_repeater_class",
        "body": [
            "\\$repeater = new Repeater();",
            "",
            "\\$repeater->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$3_list',",
            "\t[",
            "\t\t'label' => esc_html__( '$4 List', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::REPEATER,",
            "\t\t'fields' => \\$repeater->get_controls(),",
            "\t\t'default' => [",
            "\t\t\t[",
            "\t\t\t\t'$5' => __( '$6', 'rsaddon' ),",
            "\t\t\t],",
            "\t\t],",
            "\t\t'title_field' => '{{{ $7 }}}',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Repeater Class"
    },
    "Elementor Control: Entrance Animation": {
        "prefix": "el_entrance_animation",
        "body": [
            "\\$this->add_control(",
            "\t'$1_entrance_animation',",
            "\t[",
            "\t\t'label' => esc_html__( 'Entrance Animation', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::ANIMATION,",
            "\t\t'prefix_class' => 'animated ',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Entrance Animation"
    },
    "Elementor Control: Exit Animation": {
        "prefix": "el_exit_animation",
        "body": [
            "\\$this->add_control(",
            "\t'$1_exit_animation',",
            "\t[",
            "\t\t'label' => esc_html__( 'Exit Animation', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::EXIT_ANIMATION,",
            "\t\t'prefix_class' => 'animated ',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Exit Animation"
    },
    "Elementor Control: Hover Animation": {
        "prefix": "el_hover_animation",
        "body": [
            "\\$this->add_control(",
            "\t'$1_hover_animation',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover Animation', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HOVER_ANIMATION,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Hover Animation"
    },

    // Multivalue Controls
    "Elementor Control: URL": {
        "prefix": "el_url",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::URL,",
            "\t\t'options' => [ 'url', 'is_external', 'nofollow' ],",
            "\t\t'default' => [",
            "\t\t\t'url' => '',",
            "\t\t\t'is_external' => true,",
            "\t\t\t'nofollow' => true,",
            "\t\t],",
            "\t\t'label_block' => true,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: URL"
    },
    "Elementor Control: Media": {
        "prefix": "el_media",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( 'Choose Image', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::MEDIA,",
            "\t\t'default' => [",
            "\t\t\t'url' => Utils::get_placeholder_image_src(),",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Media"
    },
    "Elementor Control: Image Dimension": {
        "prefix": "el_image_dimension",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( 'Image Dimension', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::IMAGE_DIMENSIONS,",
            "\t\t'description' => esc_html__( 'Crop the original image size to any custom size. Set custom width or height to keep the original size ratio.', 'rsaddon' ),",
            "\t\t'default' => [",
            "\t\t\t'width' => '',",
            "\t\t\t'height' => '',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Image Dimension"
    },
    "Elementor Control: Icons": {
        "prefix": "el_icons",
        "body": [
            "\\$this->add_control(",
            "\t'$1_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::ICONS,",
            "\t\t'default' => [",
            "\t\t\t'value' => 'fas fa-circle',",
            "\t\t\t'library' => 'fa-solid',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Icons"
    },
    "Elementor Control: Text Shadow": {
        "prefix": "el_text_shadow",
        "body": [
            "\\$this->add_control(",
            "\t'$1_text_shadow',",
            "\t[",
            "\t\t'label' => esc_html__( 'Text Shadow', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT_SHADOW,",
            "\t\t'selectors' => [",
            "\t\t\t'{{SELECTOR}} $2' => 'text-shadow: {{HORIZONTAL}}px {{VERTICAL}}px {{BLUR}}px {{COLOR}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Text Shadow"
    },
    "Elementor Control: Box Shadow": {
        "prefix": "el_box_shadow",
        "body": [
            "\\$this->add_control(",
            "\t'$1_box_shadow',",
            "\t[",
            "\t\t'label' => esc_html__( 'Box Shadow', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::BOX_SHADOW,",
            "\t\t'selectors' => [",
            "\t\t\t'{{SELECTOR}} $2' => 'box-shadow: {{HORIZONTAL}}px {{VERTICAL}}px {{BLUR}}px {{SPREAD}}px {{COLOR}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Box Shadow"
    },

    // Unit Controls
    "Elementor Control: Slider": {
        "prefix": "el_slider",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem', 'custom' ],",
            "\t\t'range' => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'min' => 0,",
            "\t\t\t\t'max' => 1000,",
            "\t\t\t\t'step' => 5,",
            "\t\t\t],",
            "\t\t\t'%' => [",
            "\t\t\t\t'min' => 0,",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default' => [",
            "\t\t\t'unit' => '%',",
            "\t\t\t'size' => 50,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $3' => '$4: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Slider"
    },
    "Elementor Control: Dimensions": {
        "prefix": "el_dimensions",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem', 'custom' ],",
            "\t\t'default' => [",
            "\t\t\t'top' => 2,",
            "\t\t\t'right' => 0,",
            "\t\t\t'bottom' => 2,",
            "\t\t\t'left' => 0,",
            "\t\t\t'unit' => 'em',",
            "\t\t\t'isLinked' => false,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $3' => '$4: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Dimensions"
    },

    // UI Controls
    "Elementor Control: Heading": {
        "prefix": "el_heading",
        "body": [
            "\\$this->add_control(",
            "\t'_ctrl_heading',",
            "\t[",
            "\t\t'label' => esc_html__( '$1', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'classes' => 'rs-control-type-heading',",
            "\t\t'separator' => 'before',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Heading"
    },
    "Elementor Control: Raw HTML": {
        "prefix": "el_raw_html",
        "body": [
            "\\$this->add_control(",
            "\t'$1',",
            "\t[",
            "\t\t'label' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::RAW_HTML,",
            "\t\t'raw' => esc_html__( $3', 'rsaddon' ),",
            "\t\t'content_classes' => '$4',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Raw HTML"
    },
    "Elementor Control: Button": {
        "prefix": "el_button",
        "body": [
            "\\$this->add_control(",
            "\t'delete_content',",
            "\t[",
            "\t\t'label' => esc_html__( 'Delete Content', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::BUTTON,",
            "\t\t'separator' => 'before',",
            "\t\t'button_type' => 'success',",
            "\t\t'text' => esc_html__( 'Delete', 'rsaddon' ),",
            "\t\t'event' => 'namespace:editor:delete',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Button"
    },
    "Elementor Control: Divider": {
        "prefix": "el_divider",
        "body": [
            "\\$this->add_control(",
            "\t'$1_divider',",
            "\t[",
            "\t\t'type' => Controls_Manager::DIVIDER,",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Divider"
    },
    "Elementor Control: Alert": {
        "prefix": "el_alert",
        "body": [
            "\\$this->add_control(",
            "\t'$1_alert',",
            "\t[",
            "\t\t'type' => Controls_Manager::ALERT,",
            "\t\t'alert_type' => 'warning',",
            "\t\t'heading' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'content' => esc_html__( '$3', 'rsaddon' ) . ' <a href=\"\">' . esc_html__( '$4', 'rsaddon' ) . '</a>',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Alert"
    },
    "Elementor Control: Notice": {
        "prefix": "el_notice",
        "body": [
            "\\$this->add_control(",
            "\t'$1_panel_notice',",
            "\t[",
            "\t\t'type' => Controls_Manager::NOTICE,",
            "\t\t'notice_type' => 'warning',",
            "\t\t'dismissible' => true,",
            "\t\t'heading' => esc_html__( '$2', 'rsaddon' ),",
            "\t\t'content' => esc_html__( '$3', 'rsaddon' ),",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Notice"
    },
    "Elementor Control: Deprecated Notice": {
        "prefix": "el_deprecated_notice",
        "body": [
            "\\$this->add_control(",
            "\t'$1_deprecated_notice',",
            "\t[",
            "\t\t'type' => Controls_Manager::DEPRECATED_NOTICE,",
            "\t\t'widget' => 'your-old-widget',",
            "\t\t'since' => '2.6.0',",
            "\t\t'last' => '3.0.0',",
            "\t\t'plugin' => 'Your Great Plugin',",
            "\t\t'replacement' => 'your-new-widget',",
            "\t\t'content_classes' => 'your-class',",
            "\t]",
            ");"
        ],
        "description": "Elementor Control: Deprecated Notice"
    },

    // Group Control
    "Elementor Group Control: Typography": {
        "prefix": "el_typography",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Typography::get_type(),",
            "\t[",
            "\t\t'name' => '$1_typography',",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: Typography"
    },
    "Elementor Group Control: Text Stroke": {
        "prefix": "el_text_stroke",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Text_Stroke::get_type(),",
            "\t[",
            "\t\t'name' => '$1_text_stroke',",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: Text Stroke"
    },
    "Elementor Group Control: Text Shadow": {
        "prefix": "el_text_shadow",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Text_Shadow::get_type(),",
            "\t[",
            "\t\t'name' => '$1_text_shadow',",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: Text Shadow"
    },
    "Elementor Group Control: Box Shadow": {
        "prefix": "el_box_shadow",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name' => '$1_box_shadow',",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: Box Shadow"
    },
    "Elementor Group Control: Border": {
        "prefix": "el_border",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => '$1_border',",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: Border"
    },
    "Elementor Group Control: Background": {
        "prefix": "el_background",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Background::get_type(),",
            "\t[",
            "\t\t'name' => '$1_background',",
            "\t\t'types' => [ 'classic', 'gradient', 'video' ],",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: Background"
    },
    "Elementor Group Control: Image Size": {
        "prefix": "el_image_size",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Image_Size::get_type(),",
            "\t[",
            "\t\t'name' => '$1',",
            "\t\t'exclude' => [ 'custom' ],",
            "\t\t'include' => [],",
            "\t\t'default' => 'large',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: Image Size"
    },
    "Elementor Group Control: CSS Filter": {
        "prefix": "el_css_filter",
        "body": [
            "\\$this->add_group_control(",
            "\tGroup_Control_Css_Filter::get_type(),",
            "\t[",
            "\t\t'name' => '$1_css_filters',",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");"
        ],
        "description": "Elementor Group Control: CSS Filter"
    },
    "Elementor Group Control List": {
        "prefix": "el_group_control_list",
        "body": [
            "use Elementor\\Group_Control_Typography;",
            "use Elementor\\Group_Control_Text_Stroke;",
            "use Elementor\\Group_Control_Text_Shadow;",
            "use Elementor\\Group_Control_Box_Shadow;",
            "use Elementor\\Group_Control_Border;",
            "use Elementor\\Group_Control_Background;",
            "use Elementor\\Group_Control_Image_Size;",
            "use Elementor\\Group_Control_Css_Filter;",
            "use Elementor\\Group_Control_Css_Filter;"
        ],
        "description": "Elementor Group Control List"
    },

    // Control Arguments
    "Elementor Control Arguments: Label": {
        "prefix": "el_label",
        "body": [
            "'label' => esc_html__( '$1', 'rsaddon' ),"
        ],
        "description": "Elementor Control Arguments: Label"
    },
    "Elementor Control Arguments: Description": {
        "prefix": "el_description",
        "body": [
            "'description' => esc_html__( '$1', 'rsaddon' ),"
        ],
        "description": "Elementor Control Arguments: Description"
    },
    "Elementor Control Arguments: Show Label => false": {
        "prefix": "el_show_label_false",
        "body": [
            "'show_label' => false,"
        ],
        "description": "Elementor Control Arguments: Show Label => false"
    },
    "Elementor Control Arguments: Show Label => true": {
        "prefix": "el_show_label_true",
        "body": [
            "'show_label' => true,"
        ],
        "description": "Elementor Control Arguments: Show Label => true"
    },
    "Elementor Control Arguments: Label Block => false": {
        "prefix": "el_label_block_false",
        "body": [
            "'label_block' => false,"
        ],
        "description": "Elementor Control Arguments: Label Block => false"
    },
    "Elementor Control Arguments: Label Block => true": {
        "prefix": "el_label_block_true",
        "body": [
            "'label_block' => true,"
        ],
        "description": "Elementor Control Arguments: Label Block => true"
    },
    "Elementor Control Arguments: Before": {
		"prefix": "el_separator_before",
		"body": [
			"'separator' => 'before',"
		],
		"description": "Elementor Control Arguments: Before."
	},
	"Elementor Control Arguments: After": {
		"prefix": "el_separator_after",
		"body": [
			"'separator' => 'after',"
		],
		"description": "Elementor Control Arguments: After."
	},
    "Elementor Control Arguments: Selectors": {
        "prefix": "el_selectors",
        "body": [
            "'selectors' => [",
            "\t'{{WRAPPER}} $1' => '$2: {{VALUE}};'",
            "],"
        ],
        "description": "Elementor Control Arguments: Selectors"
    },
    "Elementor Control Arguments: Selector": {
        "prefix": "el_selector",
        "body": [
            "'selector' => '{{WRAPPER}} $1',"
        ],
        "description": "Elementor Control Arguments: Selector"
    },
    
    "Elementor Control Arguments: Slider Default": {
        "prefix": "el_slider_default",
        "body": [
            "'range' => [",
            "\t'px' => [",
            "\t\t'min' => $1,",
            "\t\t'max' => $2,",
            "\t\t'step' => $3,",
            "\t],",
            "\t'%' => [",
            "\t\t'min' => $4,",
            "\t\t'max' => $5,",
            "\t],",
            "],",
            "'default' => [",
            "\t'unit' => 'px',",
            "\t'size' => $6,",
            "],"
        ],
        "description": "Elementor Control Arguments: Slider Default"
    },
    "Elementor Control Arguments: Dimensions Control Default": {
        "prefix": "el_dimensions_default",
        "body": [
            "'default' => [",
            "\t'top' => $1,",
            "\t'right' => $2,",
            "\t'bottom' => $3,",
            "\t'left' => $4,",
            "\t'unit' => 'px',",
            "\t'isLinked' => false,",
            "],"
        ],
        "description": "Elementor Control Arguments: Dimensions Control Default"
    },

    // Condition
    "Elementor Condition Argument: Single-Value Condition": {
        "prefix": "el_condition_single_value",
        "body": [
            "'condition' => [",
            "\t'$1' => '$2',",
            "],"
        ],
        "description": "Elementor Condition Argument: Single-Value Condition"
    },
    "Elementor Condition Argument: Multi-Value Condition": {
        "prefix": "el_condition_multi_value",
        "body": [
            "'condition' => [",
            "\t'$1' => [ '$2', '$3' ],",
            "],"
        ],
        "description": "Elementor Condition Argument: Multi-Value Condition"
    },
    "Elementor Condition Argument: Multiple Conditions": {
        "prefix": "el_condition_multiple ",
        "body": [
            "'condition' => [",
            "\t'$1' => '$2',",
            "\t'$3' => '$4',",
            "\t'$5' => '$6',",
            "],"
        ],
        "description": "Elementor Condition Argument: Multiple Conditions"
    },
    "Elementor Condition Argument: Equality Check": {
        "prefix": "el_condition_equality_check",
        "body": [
            "'condition' => [",
            "\t'$1' => '$2',",
            "],"
        ],
        "description": "Elementor Condition Argument: Equality Check"
    },
    "Elementor Condition Argument: Inequality Check": {
        "prefix": "el_condition_inequality_check",
        "body": [
            "'condition' => [",
            "\t'$1!' => '$2',",
            "],"
        ],
        "description": "Elementor Condition Argument: Inequality Check"
    },

    // Color
    "Elementor Custom Control: Color": {
        "prefix": "elc_color",
        "body": [
            "\\$this->add_control(",
            "\t'$1_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Color"
    },

    "Elementor Custom Control: Color Hover": {
        "prefix": "elc_color_hover",
        "body": [
            "\\$this->add_control(",
            "\t'$1_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color (Hover)', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2:hover' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Color Hover"
    },


    "Elementor Custom Control: Color With Hover": {
        "prefix": "elc_color_with_hover",
        "body": [
            "\\$this->start_controls_tabs( '$1_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$2_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$2_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $4' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$5_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$6_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $7:hover' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Color With Hover"
    },
    "Elementor Custom Control: Background": {
        "prefix": "elc_background",
        "body": [
            "\\$this->add_control(",
            "\t'$1_background',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Background"
    },

    "Elementor Custom Control: Background Hover": {
        "prefix": "elc_background_hover",
        "body": [
            "\\$this->add_control(",
            "\t'$1_background_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background (Hover)', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2:hover' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Background Hover"
    },

    "Elementor Custom Control: Background With Hover": {
        "prefix": "elc_background_with_hover",
        "body": [
            "\\$this->start_controls_tabs( '\\$_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$2_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$3_background',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $4' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$5_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$6_background_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $7:hover' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Background With Hover"
    },
    "Elementor Custom Control: Border Color": {
        "prefix": "elc_border_color",
        "body": [
            "\\$this->add_control(",
            "\t'$1_border_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'border-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Border Color"
    },

    "Elementor Custom Control: Border Color Hover": {
        "prefix": "elc_border_color_hover",
        "body": [
            "\\$this->add_control(",
            "\t'$1_border_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Color (Hover)', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2:hover' => 'border-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Border Color Hover"
    },

    "Elementor Custom Control: Border Color With Hover": {
        "prefix": "elc_border_color_with_hover",
        "body": [
            "\\$this->start_controls_tabs( '$1_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$2_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$3_border_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $4' => 'border-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$5_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$6_border_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $7:hover' => 'border-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Border Color With Hover"
    },
    "Elementor Custom Control: Border With Hover": {
        "prefix": "elc_border_with_hover",
        "body": [
            "\\$this->start_controls_tabs( '$1_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$2_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => '$3_border',",
            "\t\t'selector' => '{{WRAPPER}} $4',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$5_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => '$6_border_hover',",
            "\t\t'selector' => '{{WRAPPER}} $7:hover',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Border With Hover"
    },
    "Elementor Custom Control: Color, Background, Border With Hover": {
        "prefix": "elc_color_background_border_with_hover",
        "body": [
            "\\$this->start_controls_tabs( '$1_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$2_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$3_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $4' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$5_background',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $6' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => '$7_border',",
            "\t\t'selector' => '{{WRAPPER}} $8',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$9_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $11:hover' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$12_background_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $13:hover' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => '$14_border_hover',",
            "\t\t'selector' => '{{WRAPPER}} $15:hover',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Color, Background, Border With Hover"
    },
    // Custom Control
    "Elementor Custom Control: Font Size": {
        "prefix": "elc_font_size",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_font_size',",
            "\t[",
            "\t\t'label' => esc_html__( 'Font Size', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Font Size"
    },
    "Elementor Custom Control: Icon Size": {
        "prefix": "elc_icon_size",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_icon_size',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon Size', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Icon Size"
    },
    "Elementor Custom Control: Text Align": {
        "prefix": "elc_text_align",
        "body": [
            "\\$this->add_control(",
            "\t'$1_text_align',",
            "\t[",
            "\t\t'label' => esc_html__( 'Alignment', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'left' => [",
            "\t\t\t\t'title' => esc_html__( 'Left', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-left',",
            "\t\t\t],",
            "\t\t\t'center' => [",
            "\t\t\t\t'title' => esc_html__( 'Center', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-center',",
            "\t\t\t],",
            "\t\t\t'right' => [",
            "\t\t\t\t'title' => esc_html__( 'Right', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-right',",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default' => '$2',",
            "\t\t'toggle' => true,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $3' => 'text-align: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Text Align"
    },
    "Elementor Custom Control: Width": {
        "prefix": "elc_width",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_width',",
            "\t[",
            "\t\t'label' => esc_html__( 'Width', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'width: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Width"
    },
    "Elementor Custom Control: Height": {
        "prefix": "elc_height",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_height',",
            "\t[",
            "\t\t'label' => esc_html__( 'Height', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'height: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Height"
    },
    "Elementor Custom Control: Line Height": {
        "prefix": "elc_line_height",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_line_height',",
            "\t[",
            "\t\t'label' => esc_html__( 'Line Height', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'line-height: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Line Height"
    },
    "Elementor Custom Control: Padding Top": {
        "prefix": "elc_padding_top",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_padding_top',",
            "\t[",
            "\t\t'label' => esc_html__( 'Padding Top', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'padding-top: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Padding Top"
    },
    "Elementor Custom Control: Padding Right": {
        "prefix": "elc_padding_right",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_padding_right',",
            "\t[",
            "\t\t'label' => esc_html__( 'Padding Right', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'padding-right: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Padding Right"
    },
    "Elementor Custom Control: Padding Bottom": {
        "prefix": "elc_padding_bottom",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_padding_bottom',",
            "\t[",
            "\t\t'label' => esc_html__( 'Padding Bottom', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'padding-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Padding Bottom"
    },
    "Elementor Custom Control: Padding Left": {
        "prefix": "elc_padding_left",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_padding_left',",
            "\t[",
            "\t\t'label' => esc_html__( 'Padding Left', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'padding-left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Padding Left"
    },
    "Elementor Custom Control: Margin Top": {
        "prefix": "elc_margin_top",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_margin_top',",
            "\t[",
            "\t\t'label' => esc_html__( 'Margin Top', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-top: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Margin Top"
    },
    "Elementor Custom Control: Margin Right": {
        "prefix": "elc_margin_right",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_margin_right',",
            "\t[",
            "\t\t'label' => esc_html__( 'Margin Right', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-right: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Margin Right"
    },
    "Elementor Custom Control: Margin Bottom": {
        "prefix": "elc_margin_bottom",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_margin_bottom',",
            "\t[",
            "\t\t'label' => esc_html__( 'Margin Bottom', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Margin Bottom"
    },
    "Elementor Custom Control: Margin Left": {
        "prefix": "elc_margin_left",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_margin_left',",
            "\t[",
            "\t\t'label' => esc_html__( 'Margin Left', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Margin Left"
    },
    "Elementor Custom Control: Top Spacing": {
        "prefix": "elc_top_spacing",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_top_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Top Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-top: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Top Spacing"
    },
    "Elementor Custom Control: Right Spacing": {
        "prefix": "elc_right_spacing",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_right_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Right Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-right: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Right Spacing"
    },
    "Elementor Custom Control: Bottom Spacing": {
        "prefix": "elc_bottom_spacing",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_bottom_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Bottom Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Bottom Spacing"
    },
    "Elementor Custom Control: Left Spacing": {
        "prefix": "elc_left_spacing",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_left_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Left Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Left Spacing"
    },
    "Elementor Custom Control: Margin": {
        "prefix": "elc_margin",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_margin',",
            "\t[",
            "\t\t'label' => esc_html__( 'Margin', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Margin"
    },
    "Elementor Custom Control: Padding": {
        "prefix": "elc_padding",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_padding',",
            "\t[",
            "\t\t'label' => esc_html__( 'Padding', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Padding"
    },
    "Elementor Custom Control: Border Radius": {
        "prefix": "elc_border_radius",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_border_radius',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Radius', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Border Radius"
    },
    "Elementor Custom Control: Border Radius Slider": {
        "prefix": "elc_border_radius_slider",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_border_radius_slider',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Radius', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'border-radius: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Border Radius Slider"
    },

    // Preset Control
    "Elementor Design Layout: Field": {
        "prefix": "elc_design_field",
        "body": [
            "\\$this->add_control(",
            "\t'design_style',",
            "\t[",
            "\t\t'label' => esc_html__( 'Select Layout', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'options' => [",
            "\t\t\t'layout-1' => esc_html__( 'Layout 1', 'rsaddon' ),",
            "\t\t\t'layout-2' => esc_html__( 'Layout 2', 'rsaddon' ),",
            "\t\t],",
            "\t\t'default' => 'layout-1',",
            "\t]",
            ");"
        ],
        "description": "Elementor Design Layout: Field"
    },
    "Elementor Preset Control: Design Layout": {
        "prefix": "elc_design_style_layout",
        "body": [
            "\\$this->start_controls_section(",
            "\t'_style_design_layout',",
            "\t[",
            "\t\t'label' => esc_html__( 'Design Layout',  'rsaddon'  ),",
            "\t\t'tab' => Controls_Manager::TAB_STYLE,",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'design_layout_margin',",
            "\t[",
            "\t\t'label' => esc_html__( 'Margin', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-design-layout' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'design_layout_padding',",
            "\t[",
            "\t\t'label' => esc_html__( 'Padding', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-design-layout' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'design_layout_border_radius',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Radius', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-design-layout' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'design_layout_background',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-design-layout' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => 'design_layout_border',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-design-layout',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_section();"
        ],
        "description": "Elementor Preset Control: Design Layout"
    },
    "Elementor Design Layout: Code Block": {
        "prefix": "elc_design_markup",
        "body": [
            "<?php if ( \\$settings['design_style']  == 'layout-1' ): ?>",
            "",
            "\t$1",
            "",
            "<?php elseif ( \\$settings['design_style']  == 'layout-2' ): ?>",
            "",
            "\t$2",
            "",
            "<?php endif; ?>"
        ],
        "description": "Elementor Design Layout: Code Block"
    },

    // Custom Section Control
    "Elementor Section Content: Title": {
        "prefix": "elc_section_title_content",
        "body": [
            "\\$this->add_control(",
            "\t'section_title',",
            "\t[",
            "\t\t'label' => esc_html__( 'Title', 'rsaddon' ),",
            "\t\t'description' => $1_get_allowed_html_desc( 'intermediate' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$2', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");"
        ],
        "description": "Elementor Section Content: Title"
    },
    "Elementor Section Style: Title": {
        "prefix": "elc_section_title_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_section_title',",
            "\t[",
            "\t\t'label' => esc_html__( 'Title', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'section_title_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Bottom Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => ['px'],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .your-section-title' => 'margin-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'section_title_color',",
            "\t[",
            "\t\t'label' => __( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .your-section-title' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Typography::get_type(),",
            "\t[",
            "\t\t'name' => 'section_title_typography',",
            "\t\t'selector' => '{{WRAPPER}} .your-section-title',",
            "\t]",
            ");"
        ],
        "description": "Elementor Section Style: Title"
    },
    "Elementor Section Content: Subheading": {
        "prefix": "elc_section_subheading_content",
        "body": [
            "\\$this->add_control(",
            "\t'section_subheading',",
            "\t[",
            "\t\t'label' => esc_html__( 'Subheading', 'rsaddon' ),",
            "\t\t'description' => $1_get_allowed_html_desc( 'intermediate' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$2', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");"
        ],
        "description": "Elementor Section Content: Subheading"
    },
    "Elementor Section Style: Subheading": {
        "prefix": "elc_section_subheading_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_section_subheading',",
            "\t[",
            "\t\t'label' => esc_html__( 'Subheading', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'section_subheading_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Bottom Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => ['px'],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .your-section-subheading' => 'margin-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'section_subheading_color',",
            "\t[",
            "\t\t'label' => __( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .your-section-subheading' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Typography::get_type(),",
            "\t[",
            "\t\t'name' => 'section_subheading_typography',",
            "\t\t'selector' => '{{WRAPPER}} .your-section-subheading',",
            "\t]",
            ");"
        ],
        "description": "Elementor Section Style: Subheading"
    },
    "Elementor Section Content: Description": {
        "prefix": "elc_section_content_description",
        "body": [
            "\\$this->add_control(",
            "\t'section_description',",
            "\t[",
            "\t\t'label' => esc_html__( 'Description', 'rsaddon' ),",
            "\t\t'description' => $1_get_allowed_html_desc( 'intermediate' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$2', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");"
        ],
        "description": "Elementor Section Content: Description"
    },
    "Elementor Section Style: Description": {
        "prefix": "elc_section_description_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_section_description',",
            "\t[",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'label' => __( 'Description', 'rsaddon' ),",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'section_description_spacing',",
            "\t[",
            "\t\t'label' => __( 'Bottom Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => ['px'],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .your-section-description' => 'margin-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'section_description_color',",
            "\t[",
            "\t\t'label' => __( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .your-section-description' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Typography::get_type(),",
            "\t[",
            "\t\t'name' => 'section_description_typography',",
            "\t\t'selector' => '{{WRAPPER}} .your-section-description',",
            "\t]",
            ");"
        ],
        "description": "Elementor Section Style: Description"
    },

    // Icon Type
    "Elementor Custom Control: Content Icon Type": {
        "prefix": "elc_icon_type_content",
        "body": [
            "\\$this->add_control(",
            "\t'$1_icon_type',",
            "\t[",
            "\t\t'label' => esc_html__( 'Image Type', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => 'icon',",
            "\t\t'options' => [",
            "\t\t\t'icon' => esc_html__( 'Icon', 'rsaddon' ),",
            "\t\t\t'image' => esc_html__( 'Image', 'rsaddon' ),",
            "\t\t\t'svg' => esc_html__( 'SVG', 'rsaddon' ),",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$2_image_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'Upload Image', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::MEDIA,",
            "\t\t'condition' => [",
            "\t\t\t'$3_icon_type' => 'image',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::ICONS,",
            "\t\t'fa4compatibility' => 'icon',",
            "\t\t'label_block' => true,",
            "\t\t'default' => [",
            "\t\t\t'value' => 'fas fa-star',",
            "\t\t\t'library' => 'solid',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$5_icon_type' => 'icon',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$6_svg_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'SVG Icon', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXTAREA,",
            "\t\t'rows' => 10,",
            "\t\t'condition' => [",
            "\t\t\t'$7_icon_type' => 'svg',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Content Icon Type"
    },
    "Elementor Custom Control: Style Icon Type Only Color": {
        "prefix": "elc_icon_type_only_color",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_icon_bottom_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Bottom Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$3_icon_size',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon Size', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $4' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( '$5_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$6_icon_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$7_icon_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $8' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$9_icon_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_icon_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $11:hover' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Style Icon Type Only Color"
    },
    "Elementor Custom Control: Style Icon Type with Background": {
        "prefix": "elc_icon_type_background",
        "body": [
            "\\$this->add_responsive_control(",
            "\t'$1_icon_bottom_spacing',",
            "\t[",
            "\t\t'label' => esc_html__( 'Bottom Spacing', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'margin-bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$3_icon_size',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon Size', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $4' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( '$5_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$6_icon_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$7_icon_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $8' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$9_icon_background',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $10' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => '$11_icon_border',",
            "\t\t'selector' => '{{WRAPPER}} $12',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$13_icon_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$14_icon_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $15:hover' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$16_icon_background_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $17:hover' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => '$18_icon_border_hover',",
            "\t\t'selector' => '{{WRAPPER}} $19:hover',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();",
            "",
            "\\$this->add_responsive_control(",
            "\t'$20_icon_width',",
            "\t[",
            "\t\t'label' => esc_html__( 'Width', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $21' => 'width: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$22_icon_height',",
            "\t[",
            "\t\t'label' => esc_html__( 'Height', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $23' => 'height: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$24_icon_line_height',",
            "\t[",
            "\t\t'label' => esc_html__( 'Line Height', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $25' => 'line-height: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$26_icon_border_radius',",
            "\t[",
            "\t\t'label' => esc_html__( 'Border Radius', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $27' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$28_icon_padding',",
            "\t[",
            "\t\t'label' => esc_html__( 'Padding', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px' ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $29' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name' => '$30_icon_box_shadow',",
            "\t\t'selector' => '{{WRAPPER}} $31',",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Style Icon Type with Background"
    },
    "Elementor Icon Type: Code Block": {
        "prefix": "elc_icon_type_markup",
        "body": [
            "<?php if ( \\$settings['$1_icon_type']  == 'image' ): ?>",
            "\t<div class=\"icon\">",
            "\t\t<img class=\"img-fluid\" src=\"<?php echo \\$settings['$2_image_icon']['url']; ?>\" alt=\"<?php echo get_post_meta(attachment_url_to_postid(\\$settings['$3_image_icon']['url']), '_wp_attachment_image_alt', true); ?>\">",
            "\t</div>",
            "<?php elseif ( \\$settings['$4_icon_type']  == 'icon' ): ?>",
            "\t<div class=\"icon\">",
            "\t\t<?php $5_render_icon(\\$settings, '$6_icon' ); ?>",
            "\t</div>",
            "<?php elseif ( \\$settings['$7_icon_type']  == 'svg' ): ?>",
            "\t<div class=\"icon\">",
            "\t\t<?php print \\$settings['$8_svg_icon']; ?>",
            "\t</div>",
            "<?php endif; ?>"
        ],
        "description": "Elementor Icon Type: Code Block"
    },
    "Elementor Icon: Tag": {
        "prefix": "elc_icon_tag",
        "body": [
            "<?php $1_render_icon(\\$item, '$2_icon' ); ?>"
        ],
        "description": "Elementor Icon: Tag"
    },
    "Elementor Image: Variable": {
        "prefix": "elc_image_variable",
        "body": [
            "if ( !empty(\\$settings['$1_image']['url']) ) {",
            "\t\\$$2_image = !empty(\\$settings['$3_image']['id']) ? wp_get_attachment_image_url( \\$settings['$4_image']['id'], 'full') : \\$settings['$5_image']['url'];",
            "\t\\$$6_image_alt = get_post_meta(\\$settings[\"$7_image\"][\"id\"], \"_wp_attachment_image_alt\", true);",
            "}"
        ],
        "description": "Elementor Image: Variable"
    },
    "Elementor Image: Tag": {
        "prefix": "elc_image_tag",
        "body": [
            "<img src=\"<?php echo esc_url(\\$$1_image); ?>\" alt=\"<?php echo esc_attr(\\$$2_image_alt); ?>\">"
        ],
        "description": "Elementor Image: Tag"
    },
    "Elementor Custom Control: Style Slider Arrow": {
        "prefix": "elc_slider_arrow_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_slider_arrow',",
            "\t[",
            "\t\t'label' => esc_html__( 'Arrow', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( 'slider_arrow_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'slider_arrow_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'slider_arrow_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $1' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'slider_arrow_background',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => 'slider_arrow_border',",
            "\t\t'selector' => '{{WRAPPER}} $3',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'slider_arrow_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'slider_arrow_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $4:hover' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'slider_arrow_background_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $5:hover' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => 'slider_arrow_border_hover',",
            "\t\t'selector' => '{{WRAPPER}} $6:hover',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Style Slider Arrow"
    },
    "Elementor Custom Control: Style Slider Dot": {
        "prefix": "elc_slider_dot_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_slider_dot',",
            "\t[",
            "\t\t'label' => esc_html__( 'Dot', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( 'slider_dot_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'slider_dot_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'slider_dot_background',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $1' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => 'slider_dot_border',",
            "\t\t'selector' => '{{WRAPPER}} $2',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'slider_dot_active_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Active', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'slider_dot_background_active',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $3' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'name' => 'slider_dot_border_active',",
            "\t\t'selector' => '{{WRAPPER}} $4',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Style Slider Dot"
    },
    "Elementor Custom Control: Content Link": {
        "prefix": "elc_link_content",
        "body": [
            "\\$this->add_control(",
            "\t'$1_link_text',",
            "\t[",
            "\t\t'label' => esc_html__( 'Link Text', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$2', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$3_link_type',",
            "\t[",
            "\t\t'label' => esc_html__( 'Link Type', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'options' => [",
            "\t\t\t'1' => 'Custom Link',",
            "\t\t\t'2' => 'Internal Page',",
            "\t\t],",
            "\t\t'default' => '1',",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Custom Link', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::URL,",
            "\t\t'dynamic' => [",
            "\t\t\t'active' => true,",
            "\t\t],",
            "\t\t'placeholder' => esc_html__('https://your-link.com', 'rsaddon'),",
            "\t\t'show_external' => false,",
            "\t\t'default' => [",
            "\t\t\t'url' => '#',",
            "\t\t\t'is_external' => true,",
            "\t\t\t'nofollow' => true,",
            "\t\t\t'custom_attributes' => '',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$5_link_type' => '1',",
            "\t\t],",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "\\$this->add_control(",
            "\t'$6_page_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Select Page Link', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT2,",
            "\t\t'label_block' => true,",
            "\t\t'options' => _get_all_pages(),",
            "\t\t'condition' => [",
            "\t\t\t'$7_link_type' => '2',",
            "\t\t]",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$8_link_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::ICONS,",
            "\t\t'fa4compatibility' => 'icon',",
            "\t\t'label_block' => true,",
            "\t\t'default' => [",
            "\t\t\t'value' => 'fas fa-long-arrow-alt-right',",
            "\t\t\t'library' => 'solid',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$9_link_icon_alignment',",
            "\t[",
            "\t\t'label'   => esc_html__( 'Icon Position', 'rsaddon' ),",
            "\t\t'type'    => Controls_Manager::SELECT,",
            "\t\t'default' => 'before',",
            "\t\t'options' => [",
            "\t\t\t'before' => esc_html__( 'Before', 'rsaddon' ),",
            "\t\t\t'after'  => esc_html__( 'After', 'rsaddon' ),",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$10_link_icon[value]!' \t=> '',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$11_link_icon_spacing',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Spacing', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 16,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-text-link.before-icon i' => 'padding-right: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-text-link.after-icon i'  => 'padding-left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$12_link_icon[value]!' \t=> '',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$13_button_icon_size',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Size', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 14,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-text-link.before-icon i' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-text-link.after-icon i'  => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$14_link_icon[value]!' \t=> '',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Content Link"
    },
    "Elementor Custom Control: Style Link": {
        "prefix": "elc_link_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_$1_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Link', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( '$2_link_tabs' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$3_link_normal_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_link_color',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $5' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$6_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$7_link_color_hover',",
            "\t[",
            "\t\t'label' => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $8:hover' => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();"
        ],
        "description": "Elementor Custom Control: Style Link"
    },
    "Elementor Custom Control: Link Variable": {
        "prefix": "elc_link_variable",
        "body": [
            "if ('2' == \\$settings['$1_link_type']) {",
            "\t\\$this->add_render_attribute('$2-link-arg', 'href', get_permalink(\\$settings['$3_page_link']));",
            "\t\\$this->add_render_attribute('$4-link-arg', 'target', '_self');",
            "\t\\$this->add_render_attribute('$5-link-arg', 'rel', 'nofollow');",
            "\t\\$this->add_render_attribute('$6-link-arg', 'class', 'text-domain-el-button');",
            "} else {",
            "\tif ( ! empty( \\$settings['$7_link']['url'] ) ) {",
            "\t\t\\$this->add_link_attributes( '$8-link-arg', \\$settings['$9_link'] );",
            "\t\t\\$this->add_render_attribute('$10-link-arg', 'class', 'text-domain-el-button');",
            "\t}",
            "}"
        ],
        "description": "Elementor Custom Control: Link Variable"
    },
    "Elementor Custom Control: Link Markup": {
        "prefix": "elc_link_markup",
        "body": [
            "<?php if ( \\$settings['$1_link_icon_alignment']  == 'before' ): ?>",
            "\t\t\t",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$2-link-arg' ); ?>>",
            "\t\t<?php $3_render_icon(\\$settings, '$4_link_icon'); ?><?php print $5_kses(\\$settings['$6_link_text']); ?>",
            "\t</a>",
            "",
            "<?php elseif ( \\$settings['$7_link_icon_alignment']  == 'after' ): ?>",
            "",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$8-link-arg' ); ?>>",
            "\t\t<?php print $9_kses(\\$settings['$10_link_text']); ?><?php $11_render_icon(\\$settings, '$12_link_icon'); ?>",
            "\t</a>",
            "",
            "<?php endif; ?>"
        ],
        "description": "Elementor Custom Control: Link Markup"
    },
    // Display controls for flexbox layout
    "Elementor Custom Control: Flex Control": {
        "prefix": "elc_display_css_control",
        "body": [
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_display_style',",
            "\t[",
            "\t\t'label' => esc_html__( 'Display Style', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'block' => esc_html__( 'Block', 'rsaddon' ),",
            "\t\t\t'inline-block' => esc_html__( 'Inline Block', 'rsaddon' ),",
            "\t\t\t'flex' => esc_html__( 'Flex', 'rsaddon' ),",
            "\t\t\t'inline-flex' => esc_html__( 'Inline Flex', 'rsaddon' ),",
            "\t\t],",
            "\t\t'toggle' => true,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'display: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_flex_v_align',",
            "\t[",
            "\t\t'label' => esc_html__( 'Vertical Align', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'flex-start' => [ 'title' => esc_html__( 'Top', 'rsaddon' ), 'icon' => 'eicon-align-start-v' ],",
            "\t\t\t'center'     => [ 'title' => esc_html__( 'Middle', 'rsaddon' ), 'icon' => 'eicon-align-center-v' ],",
            "\t\t\t'flex-end'   => [ 'title' => esc_html__( 'Bottom', 'rsaddon' ), 'icon' => 'eicon-align-end-v' ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_display_style' => ['flex', 'inline-flex'] ],",
            "\t\t'toggle' => true,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'align-items: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_flex_h_align',",
            "\t[",
            "\t\t'label' => esc_html__( 'Horizontal Align', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'flex-start'     => [ 'title' => esc_html__( 'Start', 'rsaddon' ), 'icon' => 'eicon-align-start-h' ],",
            "\t\t\t'center'         => [ 'title' => esc_html__( 'Center', 'rsaddon' ), 'icon' => 'eicon-align-center-h' ],",
            "\t\t\t'flex-end'       => [ 'title' => esc_html__( 'End', 'rsaddon' ), 'icon' => 'eicon-align-end-h' ],",
            "\t\t\t'space-between'  => [ 'title' => esc_html__( 'Space Between', 'rsaddon' ), 'icon' => 'eicon-justify-space-between-h' ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_display_style' => ['flex', 'inline-flex'] ],",
            "\t\t'toggle' => true,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'justify-content: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_flex_dir',",
            "\t[",
            "\t\t'label' => esc_html__( 'Column Direction', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'row'            => [ 'title' => esc_html__( 'Row', 'rsaddon' ), 'icon' => 'eicon-justify-start-h' ],",
            "\t\t\t'row-reverse'    => [ 'title' => esc_html__( 'Row Reverse', 'rsaddon' ), 'icon' => 'eicon-wrap' ],",
            "\t\t\t'column'         => [ 'title' => esc_html__( 'Column', 'rsaddon' ), 'icon' => 'eicon-justify-start-v' ],",
            "\t\t\t'column-reverse' => [ 'title' => esc_html__( 'Column Reverse', 'rsaddon' ), 'icon' => 'eicon-wrap' ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_display_style' => ['flex', 'inline-flex'] ],",
            "\t\t'toggle' => true,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'flex-direction: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_flex_wrap',",
            "\t[",
            "\t\t'label' => esc_html__( 'Flex Wrap', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'nowrap' => [ 'title' => esc_html__( 'No Wrap', 'rsaddon' ), 'icon' => 'eicon-nowrap' ],",
            "\t\t\t'wrap'   => [ 'title' => esc_html__( 'Wrap', 'rsaddon' ), 'icon' => 'eicon-wrap' ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_display_style' => ['flex', 'inline-flex'] ],",
            "\t\t'toggle' => true,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'flex-wrap: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_flex_gap',",
            "\t[",
            "\t\t'label' => esc_html__( 'Gap Between', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'custom' ],",
            "\t\t'range' => [",
            "\t\t\t'px' => [ 'min' => 0, 'max' => 1000 ],",
            "\t\t\t'%' => [ 'min' => 0, 'max' => 100 ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_display_style' => ['flex', 'inline-flex'] ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'gap: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Display CSS Control e.g. flex,block"
    },
    // Position controls for absolute, relative position
    "Elementor Custom Control: Position Maker": {
        "prefix": "elc_position_maker",
        "body": [
            "\\$this->add_control(",
            "\t'$1_position_maker',",
            "\t[",
            "\t\t'label' => esc_html__( 'Position Maker', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::POPOVER_TOGGLE,",
            "\t\t'label_off' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t'label_on' => esc_html__( 'Custom', 'rsaddon' ),",
            "\t\t'return_value' => 'yes',",
            "\t\t'default' => 'no',",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->start_popover();",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_position',",
            "\t[",
            "\t\t'label' => esc_html__( 'Position', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'unset' => esc_html__( 'Unset', 'rsaddon' ),",
            "\t\t\t'absolute' => esc_html__( 'Absolute', 'rsaddon' ),",
            "\t\t\t'relative'  => esc_html__( 'Relative', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'position: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_p_top',",
            "\t[",
            "\t\t'label' => esc_html__( 'Top', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'custom' ],",
            "\t\t'range' => [",
            "\t\t\t'px' => [ 'min' => -1000, 'max' => 1000 ],",
            "\t\t\t'%' => [ 'min' => -100, 'max' => 100 ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_position' => ['absolute', 'relative'] ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'top: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_p_right',",
            "\t[",
            "\t\t'label' => esc_html__( 'Right', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'custom' ],",
            "\t\t'range' => [",
            "\t\t\t'px' => [ 'min' => -1000, 'max' => 1000 ],",
            "\t\t\t'%' => [ 'min' => -100, 'max' => 100 ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_position' => ['absolute', 'relative'] ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'right: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_p_bottom',",
            "\t[",
            "\t\t'label' => esc_html__( 'Bottom', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'custom' ],",
            "\t\t'range' => [",
            "\t\t\t'px' => [ 'min' => -1000, 'max' => 1000 ],",
            "\t\t\t'%' => [ 'min' => -100, 'max' => 100 ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_position' => ['absolute', 'relative'] ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'bottom: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$1_p_left',",
            "\t[",
            "\t\t'label' => esc_html__( 'Left', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'size_units' => [ 'px', '%', 'custom' ],",
            "\t\t'range' => [",
            "\t\t\t'px' => [ 'min' => -1000, 'max' => 1000 ],",
            "\t\t\t'%' => [ 'min' => -100, 'max' => 100 ],",
            "\t\t],",
            "\t\t'condition' => [ '$1_position' => ['absolute', 'relative'] ],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_popover();"
        ],
        "description": "Elementor Custom Control: Position Maker"
    },
    // Object Fit Control for images and videos
    "Elementor Markup: Add Object Fit Control": {
        "prefix": "elc_object_fit_control",
        "body": [
            "\\$this->add_control(",
            "\t'$1_object_fit',",
            "\t[",
            "\t\t'label' => esc_html__( 'Object Fit', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'cover' => esc_html__( 'Cover', 'rsaddon' ),",
            "\t\t\t'contain' => esc_html__( 'Contain', 'rsaddon' ),",
            "\t\t\t'fill' => esc_html__( 'Fill', 'rsaddon' ),",
            "\t\t\t'none' => esc_html__( 'None', 'rsaddon' ),",
            "\t\t\t'scale-down' => esc_html__( 'Scale Down', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2 img' => 'object-fit: {{VALUE}} !important;',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$1_object_position',",
            "\t[",
            "\t\t'label' => esc_html__( 'Object Position', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'center center' => esc_html__( 'Center Center', 'rsaddon' ),",
            "\t\t\t'center left' => esc_html__( 'Center Left', 'rsaddon' ),",
            "\t\t\t'center right' => esc_html__( 'Center Right', 'rsaddon' ),",
            "\t\t\t'top center' => esc_html__( 'Top Center', 'rsaddon' ),",
            "\t\t\t'top left' => esc_html__( 'Top Left', 'rsaddon' ),",
            "\t\t\t'top right' => esc_html__( 'Top Right', 'rsaddon' ),",
            "\t\t\t'bottom center' => esc_html__( 'Bottom Center', 'rsaddon' ),",
            "\t\t\t'bottom left' => esc_html__( 'Bottom Left', 'rsaddon' ),",
            "\t\t\t'bottom right' => esc_html__( 'Bottom Right', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2 img' => 'object-position: {{VALUE}} !important;',",
            "\t\t],",
            "\t]",
            ");",
            ""
        ],
        "description": "Elementor Object Fit Control"
    },
    // Background fit controls for images
    "Elementor Markup: Add Background Image Control": {
        "prefix": "elc_background_fit_controls",
        "body": [
            "\\$this->add_control(",
            "\t'$1_bg_size',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background Size', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'auto' => esc_html__( 'Auto', 'rsaddon' ),",
            "\t\t\t'cover' => esc_html__( 'Cover', 'rsaddon' ),",
            "\t\t\t'contain' => esc_html__( 'Contain', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'background-size: {{VALUE}} !important;',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$1_bg_position',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background Position', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'center center' => esc_html__( 'Center Center', 'rsaddon' ),",
            "\t\t\t'center left' => esc_html__( 'Center Left', 'rsaddon' ),",
            "\t\t\t'center right' => esc_html__( 'Center Right', 'rsaddon' ),",
            "\t\t\t'top center' => esc_html__( 'Top Center', 'rsaddon' ),",
            "\t\t\t'top left' => esc_html__( 'Top Left', 'rsaddon' ),",
            "\t\t\t'top right' => esc_html__( 'Top Right', 'rsaddon' ),",
            "\t\t\t'bottom center' => esc_html__( 'Bottom Center', 'rsaddon' ),",
            "\t\t\t'bottom left' => esc_html__( 'Bottom Left', 'rsaddon' ),",
            "\t\t\t'bottom right' => esc_html__( 'Bottom Right', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'background-position: {{VALUE}} !important;',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$1_bg_repeat',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background Repeat', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'no-repeat' => esc_html__( 'No Repeat', 'rsaddon' ),",
            "\t\t\t'repeat' => esc_html__( 'Repeat', 'rsaddon' ),",
            "\t\t\t'repeat-x' => esc_html__( 'Repeat X', 'rsaddon' ),",
            "\t\t\t'repeat-y' => esc_html__( 'Repeat Y', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'background-repeat: {{VALUE}} !important;',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$1_bg_attachment',",
            "\t[",
            "\t\t'label' => esc_html__( 'Background Attachment', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'scroll' => esc_html__( 'Scroll', 'rsaddon' ),",
            "\t\t\t'fixed' => esc_html__( 'Fixed', 'rsaddon' ),",
            "\t\t\t'local' => esc_html__( 'Local', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'background-attachment: {{VALUE}} !important;',",
            "\t\t],",
            "\t]",
            ");",
            ""
        ],
        "description": "Elementor Background Image Fit Control"
    },
    // Overflow controls
    "Elementor Markup: Add Overflow Control": {
        "prefix": "elc_overflow_control",
        "body": [
            "\\$this->add_control(",
            "\t'$1_overflow',",
            "\t[",
            "\t\t'label' => esc_html__( 'Overflow', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'default' => '',",
            "\t\t'options' => [",
            "\t\t\t'' => esc_html__( 'Default', 'rsaddon' ),",
            "\t\t\t'visible' => esc_html__( 'Visible', 'rsaddon' ),",
            "\t\t\t'hidden' => esc_html__( 'Hidden', 'rsaddon' ),",
            "\t\t\t'scroll' => esc_html__( 'Scroll', 'rsaddon' ),",
            "\t\t\t'auto' => esc_html__( 'Auto', 'rsaddon' ),",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'overflow: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            ""
        ],
        "description": "Elementor Overflow Control"
    },
    // Z-Index controls
    "Elementor Markup: Add Z-Index Slider Control": {
        "prefix": "elc_zindex_control",
        "body": [
            "\\$this->add_control(",
            "\t'$1_zindex_control',",
            "\t[",
            "\t\t'label' => esc_html__( 'Z-Index', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'range' => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'min' => -999,",
            "\t\t\t\t'max' => 999,",
            "\t\t\t\t'step' => 1,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'z-index: {{SIZE}};',",
            "\t\t],",
            "\t]",
            ");",
            ""
        ],
        "description": "Elementor Z-Index Slider Control"
    },
    // Opacity controls
    "Elementor Markup: Add Opacity Control": {
        "prefix": "elc_opacity_control",
        "body": [
            "\\$this->add_control(",
            "\t'$1_opacity_control',",
            "\t[",
            "\t\t'label' => esc_html__( 'Opacity', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'range' => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'min' => 0,",
            "\t\t\t\t'max' => 10,",
            "\t\t\t\t'step' => 0.1,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'opacity: {{SIZE}};',",
            "\t\t],",
            "\t]",
            ");",
            ""
        ],
        "description": "Elementor Opacity Slider Control"
    },
    // Backdrop filter blur controls
    "Elementor Markup: Add Backdrop Blur Control": {
        "prefix": "elc_blur_backdrop_control",
        "body": [
            "\\$this->add_control(",
            "\t'$1_filter_blur_control',",
            "\t[",
            "\t\t'label' => esc_html__( 'Backdrop Blur', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SLIDER,",
            "\t\t'range' => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'min' => 0,",
            "\t\t\t\t'max' => 100,",
            "\t\t\t\t'step' => 1,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} $2' => 'backdrop-filter: blur({{SIZE}}px);',",
            "\t\t],",
            "\t]",
            ");",
            ""
        ],
        "description": "Elementor Backdrop Filter Blur Slider Control"
    },
    // Button controls
    "Elementor Custom Control: Content Button": {
        "prefix": "elc_button_content",
        "body": [
            "\\$this->start_controls_section(",
            "\t'_content_$1_button',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button', 'rsaddon' ),",
            "\t\t'tab' => Controls_Manager::TAB_CONTENT,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$2_button_text',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button Text', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$3', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_button_link_type',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button Link Type', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'options' => [",
            "\t\t\t'1' => 'Custom Link',",
            "\t\t\t'2' => 'Internal Page',",
            "\t\t],",
            "\t\t'default' => '1',",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$5_button_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button link', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::URL,",
            "\t\t'dynamic' => [",
            "\t\t\t'active' => true,",
            "\t\t],",
            "\t\t'placeholder' => esc_html__('https://your-link.com', 'rsaddon'),",
            "\t\t'show_external' => false,",
            "\t\t'default' => [",
            "\t\t\t'url' => '#',",
            "\t\t\t'is_external' => true,",
            "\t\t\t'nofollow' => true,",
            "\t\t\t'custom_attributes' => '',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$6_button_link_type' => '1',",
            "\t\t],",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "\\$this->add_control(",
            "\t'$7_button_page_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Select Button Page', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT2,",
            "\t\t'label_block' => true,",
            "\t\t'options' => _get_all_pages(),",
            "\t\t'condition' => [",
            "\t\t\t'$8_button_link_type' => '2',",
            "\t\t]",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$9_align',",
            "\t[",
            "\t\t'label' => esc_html__( 'Alignment', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'left' => [",
            "\t\t\t\t'title' => esc_html__( 'Left', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-left',",
            "\t\t\t],",
            "\t\t\t'center' => [",
            "\t\t\t\t'title' => esc_html__( 'Center', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-center',",
            "\t\t\t],",
            "\t\t\t'right' => [",
            "\t\t\t\t'title' => esc_html__( 'Right', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-right',",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default' => 'left',",
            "\t\t'toggle' => false,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button' => 'text-align: {{VALUE}};'",
            "\t\t]",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_button_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::ICONS,",
            "\t\t'fa4compatibility' => 'icon',",
            "\t\t'label_block' => true,",
            "\t\t'default' => [",
            "\t\t\t'value' => 'fas fa-long-arrow-alt-right',",
            "\t\t\t'library' => 'solid',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$11_button_icon_alignment',",
            "\t[",
            "\t\t'label'   => esc_html__( 'Icon Position', 'rsaddon' ),",
            "\t\t'type'    => Controls_Manager::SELECT,",
            "\t\t'default' => 'before',",
            "\t\t'options' => [",
            "\t\t\t'before' => esc_html__( 'Before', 'rsaddon' ),",
            "\t\t\t'after'  => esc_html__( 'After', 'rsaddon' ),",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$12_button_icon[value]!' \t=> '',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$13_button_icon_spacing',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Spacing', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 16,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button.before-icon i' => 'padding-right: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button.after-icon i'  => 'padding-left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$14_button_icon[value]!' \t=> '',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$15_button_icon_size',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Size', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 14,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button.before-icon i' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button.after-icon i'  => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$16_button_icon[value]!' \t=> '',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_section();"
        ],
        "description": "Elementor Custom Control: Content Button"
    },
    "Elementor Custom Control: Style Button": {
        "prefix": "elc_button_style",
        "body": [
            "\\$this->start_controls_section(",
            "\t'_style_$1_button',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button', 'rsaddon' ),",
            "\t\t'tab' => Controls_Manager::TAB_STYLE,",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( 'tabs_style_$2_button' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$3_button_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_button_color',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button'    => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$5_button_background',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Border', 'rsaddon' ),",
            "\t\t'name'     => '$6_button_border',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-button',",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name'     => '$7_button_box_shadow',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-button',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$8_button_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$9_button_color_hover',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button:hover' => 'color: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_button_background_hover',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button:after, .text-domain-el-button:before' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Border', 'rsaddon' ),",
            "\t\t'name'     => '$11_button_border_hover',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-button:hover',",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name'     => '$12_button_box_shadow_hover',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-button:hover',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();",
            "",
            "\\$this->add_control(",
            "\t'$13_button_border_radius',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Border Radius', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button' => 'border-radius: {{SIZE}}px;',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button:before' => 'border-radius: {{SIZE}}px;',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Typography::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Typography', 'rsaddon' ),",
            "\t\t'name'     => '$14_button_typography',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-button',",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$15_button_padding',",
            "\t[",
            "\t\t'label'      => esc_html__( 'Padding', 'rsaddon' ),",
            "\t\t'type'       => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors'  => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$16_button_margin',",
            "\t[",
            "\t\t'label'      => esc_html__( 'Margin', 'rsaddon' ),",
            "\t\t'type'       => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => [ 'px', '%', 'em', 'rem' ],",
            "\t\t'selectors'  => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-button' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_section();"
        ],
        "description": "Elementor Custom Control: Style Button"
    },
    "Elementor Custom Control: Button Link Variable": {
        "prefix": "elc_button_link_variable",
        "body": [
            "if ('2' == \\$settings['$1_button_link_type']) {",
            "\t\\$this->add_render_attribute('$2-button-arg', 'href', get_permalink(\\$settings['$3_button_page_link']));",
            "\t\\$this->add_render_attribute('$4-button-arg', 'target', '_self');",
            "\t\\$this->add_render_attribute('$5-button-arg', 'rel', 'nofollow');",
            "\t\\$this->add_render_attribute('$6-button-arg', 'class', 'text-domain-el-button');",
            "} else {",
            "\tif ( ! empty( \\$settings['$7_button_link']['url'] ) ) {",
            "\t\t\\$this->add_link_attributes( '$8-button-arg', \\$settings['$9_button_link'] );",
            "\t\t\\$this->add_render_attribute('$10-button-arg', 'class', 'text-domain-el-button');",
            "\t}",
            "}"
        ],
        "description": "Elementor Custom Control: Button Link Variable"
    },
    "Elementor Custom Control: Button Markup": {
        "prefix": "elc_button_markup",
        "body": [
            "<?php if ( \\$settings['$1_button_icon_alignment']  == 'before' ): ?>",
            "\t\t\t",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$2-button-arg' ); ?>>",
            "\t\t<?php $3_render_icon(\\$settings, '$4_button_icon'); ?><?php print $5_kses(\\$settings['$6_button_text']); ?>",
            "\t</a>",
            "",
            "<?php elseif ( \\$settings['$7_button_icon_alignment']  == 'after' ): ?>",
            "",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$8-button-arg' ); ?>>",
            "\t\t<?php print $9_kses(\\$settings['$10_button_text']); ?><?php $11_render_icon(\\$settings, '$12_button_icon'); ?>",
            "\t</a>",
            "",
            "<?php endif; ?>"
        ],
        "description": "Elementor Custom Control: Button Markup"
    },
    "Elementor Custom Control: Content Button Secondary": {
        "prefix": "elc_button_secondary_content",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_content_$1_secondary_button',",
            "\t[",
            "\t\t'label' => esc_html__( 'Secondary Button', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$2_secondary_button_text',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button Text', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$3', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_secondary_button_link_type',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button Link Type', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'options' => [",
            "\t\t\t'1' => 'Custom Link',",
            "\t\t\t'2' => 'Internal Page',",
            "\t\t],",
            "\t\t'default' => '1',",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$5_secondary_button_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button link', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::URL,",
            "\t\t'dynamic' => [",
            "\t\t\t'active' => true,",
            "\t\t],",
            "\t\t'placeholder' => esc_html__('https://your-link.com', 'rsaddon'),",
            "\t\t'show_external' => false,",
            "\t\t'default' => [",
            "\t\t\t'url' => '#',",
            "\t\t\t'is_external' => true,",
            "\t\t\t'nofollow' => true,",
            "\t\t\t'custom_attributes' => '',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$6_secondary_button_link_type' => '1',",
            "\t\t],",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "\\$this->add_control(",
            "\t'$7_secondary_button_page_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Select Button Page', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT2,",
            "\t\t'label_block' => true,",
            "\t\t'options' => _get_all_pages(),",
            "\t\t'condition' => [",
            "\t\t\t'$8_secondary_button_link_type' => '2',",
            "\t\t]",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$9_secondary_button_align',",
            "\t[",
            "\t\t'label' => esc_html__( 'Alignment', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'left' => [",
            "\t\t\t\t'title' => esc_html__( 'Left', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-left',",
            "\t\t\t],",
            "\t\t\t'center' => [",
            "\t\t\t\t'title' => esc_html__( 'Center', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-center',",
            "\t\t\t],",
            "\t\t\t'right' => [",
            "\t\t\t\t'title' => esc_html__( 'Right', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-right',",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default' => 'left',",
            "\t\t'toggle' => false,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button' => 'text-align: {{VALUE}};'",
            "\t\t]",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_secondary_button_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::ICONS,",
            "\t\t'fa4compatibility' => 'icon',",
            "\t\t'label_block' => true,",
            "\t\t'default' => [",
            "\t\t\t'value' => 'fas fa-long-arrow-alt-right',",
            "\t\t\t'library' => 'solid',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$11_secondary_button_icon_alignment',",
            "\t[",
            "\t\t'label'   => esc_html__( 'Icon Position', 'rsaddon' ),",
            "\t\t'type'    => Controls_Manager::SELECT,",
            "\t\t'default' => 'before',",
            "\t\t'options' => [",
            "\t\t\t'before' => esc_html__( 'Before', 'rsaddon' ),",
            "\t\t\t'after'  => esc_html__( 'After', 'rsaddon' ),",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$12_secondary_button_icon_spacing',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Spacing', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 16,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button.before-icon i' => 'padding-right: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button.after-icon i'  => 'padding-left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$13_secondary_button_icon_size',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Size', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 14,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button.before-icon i' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button.after-icon i'  => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Content Button Secondary"
    },
    "Elementor Custom Control: Style Button Secondary": {
        "prefix": "elc_button_secondary_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_$1_secondary_button',",
            "\t[",
            "\t\t'label' => esc_html__( 'Secondary Button', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( 'tabs_style_$2_button' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$3_secondary_button_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_secondary_button_color',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button'    => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$5_secondary_button_background',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Border', 'rsaddon' ),",
            "\t\t'name'     => '$6_secondary_button_border',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-secondary-button',",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name'     => '$7_secondary_button_box_shadow',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-secondary-button',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$8_secondary_button_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$9_secondary_button_color_hover',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button:hover' => 'color: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_secondary_button_background_hover',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button:before' => 'background-color: {{VALUE}}',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button:after' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Border', 'rsaddon' ),",
            "\t\t'name'     => '$11_secondary_button_border_hover',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-secondary-button:hover',",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name'     => '$12_secondary_button_box_shadow_hover',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-secondary-button:hover',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();",
            "",
            "\\$this->add_control(",
            "\t'$13_secondary_button_border_radius',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Border Radius', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button' => 'border-radius: {{SIZE}}px;',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button:before' => 'border-radius: {{SIZE}}px;',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Typography::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Typography', 'rsaddon' ),",
            "\t\t'name'     => '$14_secondary_button_typography',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-secondary-button',",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$15_secondary_button_padding',",
            "\t[",
            "\t\t'label'      => esc_html__( 'Padding', 'rsaddon' ),",
            "\t\t'type'       => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => ['px', 'em', '%'],",
            "\t\t'selectors'  => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$16_secondary_button_margin',",
            "\t[",
            "\t\t'label'      => esc_html__( 'Margin', 'rsaddon' ),",
            "\t\t'type'       => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => ['px', 'em', '%'],",
            "\t\t'selectors'  => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-secondary-button' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Style Button Secondary"
    },
    "Elementor Custom Control: Button Secondary Variable": {
        "prefix": "elc_button_secondary_link_variable",
        "body": [
            "if ('2' == \\$settings['$1_secondary_button_link_type']) {",
            "\t\\$this->add_render_attribute('$2-secondary-button-arg', 'href', get_permalink(\\$settings['$3_secondary_button_page_link']));",
            "\t\\$this->add_render_attribute('$4-secondary-button-arg', 'target', '_self');",
            "\t\\$this->add_render_attribute('$5-secondary-button-arg', 'rel', 'nofollow');",
            "\t\\$this->add_render_attribute('$6-secondary-button-arg', 'class', 'text-domain-el-secondary-button');",
            "} else {",
            "\tif ( ! empty( \\$settings['$7_secondary_button_link']['url'] ) ) {",
            "\t\t\\$this->add_link_attributes( '$8-secondary-button-arg', \\$settings['$9_secondary_button_link'] );",
            "\t\t\\$this->add_render_attribute('$10-secondary-button-arg', 'class', 'text-domain-el-secondary-button');",
            "\t}",
            "}"
        ],
        "description": "Elementor Custom Control: Button Secondary Variable"
    },
    "Elementor Custom Control: Button Secondary Markup": {
        "prefix": "elc_button_secondary_markup",
        "body": [
            "<?php if ( \\$settings['$1_secondary_button_icon_alignment']  == 'before' ): ?>",
            "\t\t\t",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$2-secondary-button-arg' ); ?>>",
            "\t\t<?php $3_render_icon(\\$settings, '$4_secondary_button_icon'); ?><?php print $5_kses(\\$settings['$6_secondary_button_text']); ?>",
            "\t</a>",
            "",
            "<?php elseif ( \\$settings['$7_secondary_button_icon_alignment']  == 'after' ): ?>",
            "",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$8-secondary-button-arg' ); ?>>",
            "\t\t<?php print $9_kses(\\$settings['$10_secondary_button_text']); ?><?php $11_render_icon(\\$settings, '$12_secondary_button_icon'); ?>",
            "\t</a>",
            "",
            "<?php endif; ?>"
        ],
        "description": "Elementor Custom Control: Button Secondary Markup"
    },
    "Elementor Custom Control: Content Button Third": {
        "prefix": "elc_button_third_content",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_content_$1_third_button',",
            "\t[",
            "\t\t'label' => esc_html__( 'Third Button', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$2_third_button_text',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button Text', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t\t'default' => __( '$3', 'rsaddon' ),",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_third_button_link_type',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button Link Type', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT,",
            "\t\t'options' => [",
            "\t\t\t'1' => 'Custom Link',",
            "\t\t\t'2' => 'Internal Page',",
            "\t\t],",
            "\t\t'default' => '1',",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$5_third_button_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Button link', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::URL,",
            "\t\t'dynamic' => [",
            "\t\t\t'active' => true,",
            "\t\t],",
            "\t\t'placeholder' => esc_html__('https://your-link.com', 'rsaddon'),",
            "\t\t'show_external' => false,",
            "\t\t'default' => [",
            "\t\t\t'url' => '#',",
            "\t\t\t'is_external' => true,",
            "\t\t\t'nofollow' => true,",
            "\t\t\t'custom_attributes' => '',",
            "\t\t],",
            "\t\t'condition' => [",
            "\t\t\t'$6_third_button_link_type' => '1',",
            "\t\t],",
            "\t\t'label_block' => true,",
            "\t]",
            ");",
            "\\$this->add_control(",
            "\t'$7_third_button_page_link',",
            "\t[",
            "\t\t'label' => esc_html__( 'Select Button Page', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::SELECT2,",
            "\t\t'label_block' => true,",
            "\t\t'options' => _get_all_pages(),",
            "\t\t'condition' => [",
            "\t\t\t'$8_third_button_link_type' => '2',",
            "\t\t]",
            "\t]",
            ");",
            "",
            "\\$this->add_responsive_control(",
            "\t'$9_third_button_align',",
            "\t[",
            "\t\t'label' => esc_html__( 'Alignment', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::CHOOSE,",
            "\t\t'options' => [",
            "\t\t\t'left' => [",
            "\t\t\t\t'title' => esc_html__( 'Left', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-left',",
            "\t\t\t],",
            "\t\t\t'center' => [",
            "\t\t\t\t'title' => esc_html__( 'Center', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-center',",
            "\t\t\t],",
            "\t\t\t'right' => [",
            "\t\t\t\t'title' => esc_html__( 'Right', 'rsaddon' ),",
            "\t\t\t\t'icon' => 'eicon-text-align-right',",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default' => 'left',",
            "\t\t'toggle' => false,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button' => 'text-align: {{VALUE}};'",
            "\t\t]",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_third_button_icon',",
            "\t[",
            "\t\t'label' => esc_html__( 'Icon', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::ICONS,",
            "\t\t'fa4compatibility' => 'icon',",
            "\t\t'label_block' => true,",
            "\t\t'default' => [",
            "\t\t\t'value' => 'fas fa-long-arrow-alt-right',",
            "\t\t\t'library' => 'solid',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$11_third_button_icon_alignment',",
            "\t[",
            "\t\t'label'   => esc_html__( 'Icon Position', 'rsaddon' ),",
            "\t\t'type'    => Controls_Manager::SELECT,",
            "\t\t'default' => 'before',",
            "\t\t'options' => [",
            "\t\t\t'before' => esc_html__( 'Before', 'rsaddon' ),",
            "\t\t\t'after'  => esc_html__( 'After', 'rsaddon' ),",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$12_third_button_icon_spacing',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Spacing', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 16,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button.before-icon i' => 'padding-right: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button.after-icon i'  => 'padding-left: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$13_third_button_icon_size',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Icon Size', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'range'     => [",
            "\t\t\t'px' => [",
            "\t\t\t\t'max' => 100,",
            "\t\t\t],",
            "\t\t],",
            "\t\t'default'   => [",
            "\t\t\t'size' => 14,",
            "\t\t],",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button.before-icon i' => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button.after-icon i'  => 'font-size: {{SIZE}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Content Button Third"
    },
    "Elementor Custom Control: Style Button Third": {
        "prefix": "elc_button_third_style",
        "body": [
            "\\$this->add_control(",
            "\t'_heading_style_$1_third_button',",
            "\t[",
            "\t\t'label' => esc_html__( 'third Button', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::HEADING,",
            "\t\t'separator' => 'before',",
            "\t]",
            ");",
            "",
            "\\$this->start_controls_tabs( 'tabs_style_$2_button' );",
            "",
            "\\$this->start_controls_tab(",
            "\t'$3_third_button_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Normal', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$4_third_button_color',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button'    => 'color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$5_third_button_background',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Border', 'rsaddon' ),",
            "\t\t'name'     => '$6_third_button_border',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-third-button',",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name'     => '$7_third_button_box_shadow',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-third-button',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->start_controls_tab(",
            "\t'$8_third_button_hover_tab',",
            "\t[",
            "\t\t'label' => esc_html__( 'Hover', 'rsaddon' ),",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$9_third_button_color_hover',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Color', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button:hover' => 'color: {{VALUE}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$10_third_button_background_hover',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Background', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::COLOR,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button:before' => 'background-color: {{VALUE}}',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button:after' => 'background-color: {{VALUE}}',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Border::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Border', 'rsaddon' ),",
            "\t\t'name'     => '$11_third_button_border_hover',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-third-button:hover',",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Box_Shadow::get_type(),",
            "\t[",
            "\t\t'name'     => '$12_third_button_box_shadow_hover',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-third-button:hover',",
            "\t]",
            ");",
            "",
            "\\$this->end_controls_tab();",
            "",
            "\\$this->end_controls_tabs();",
            "",
            "\\$this->add_control(",
            "\t'$13_third_button_border_radius',",
            "\t[",
            "\t\t'label'     => esc_html__( 'Border Radius', 'rsaddon' ),",
            "\t\t'type'      => Controls_Manager::SLIDER,",
            "\t\t'selectors' => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button' => 'border-radius: {{SIZE}}px;',",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button:before' => 'border-radius: {{SIZE}}px;',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_group_control(",
            "\tGroup_Control_Typography::get_type(),",
            "\t[",
            "\t\t'label'    => esc_html__( 'Typography', 'rsaddon' ),",
            "\t\t'name'     => '$14_third_button_typography',",
            "\t\t'selector' => '{{WRAPPER}} .text-domain-el-third-button',",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$15_third_button_padding',",
            "\t[",
            "\t\t'label'      => esc_html__( 'Padding', 'rsaddon' ),",
            "\t\t'type'       => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => ['px', 'em', '%'],",
            "\t\t'selectors'  => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'$16_third_button_margin',",
            "\t[",
            "\t\t'label'      => esc_html__( 'Margin', 'rsaddon' ),",
            "\t\t'type'       => Controls_Manager::DIMENSIONS,",
            "\t\t'size_units' => ['px', 'em', '%'],",
            "\t\t'selectors'  => [",
            "\t\t\t'{{WRAPPER}} .text-domain-el-third-button' => 'margin: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Style Button Third"
    },
    "Elementor Custom Control: Button Third Variable": {
        "prefix": "elc_button_third_link_variable",
        "body": [
            "if ('2' == \\$settings['$1_third_button_link_type']) {",
            "\t\\$this->add_render_attribute('$2-third-button-arg', 'href', get_permalink(\\$settings['$3_third_button_page_link']));",
            "\t\\$this->add_render_attribute('$4-third-button-arg', 'target', '_self');",
            "\t\\$this->add_render_attribute('$5-third-button-arg', 'rel', 'nofollow');",
            "\t\\$this->add_render_attribute('$6-third-button-arg', 'class', 'text-domain-el-third-button');",
            "} else {",
            "\tif ( ! empty( \\$settings['$7_third_button_link']['url'] ) ) {",
            "\t\t\\$this->add_link_attributes( '$8-third-button-arg', \\$settings['$9_third_button_link'] );",
            "\t\t\\$this->add_render_attribute('$10-third-button-arg', 'class', 'text-domain-el-third-button');",
            "\t}",
            "}"
        ],
        "description": "Elementor Custom Control: Button Third Variable"
    },
    "Elementor Custom Control: Button Third Markup": {
        "prefix": "elc_button_third_markup",
        "body": [
            "<?php if ( \\$settings['$1_third_button_icon_alignment']  == 'before' ): ?>",
            "\t\t\t",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$2-third-button-arg' ); ?>>",
            "\t\t<?php $3_render_icon(\\$settings, '$4_third_button_icon'); ?><?php print $5_kses(\\$settings['$6_third_button_text']); ?>",
            "\t</a>",
            "",
            "<?php elseif ( \\$settings['$7_third_button_icon_alignment']  == 'after' ): ?>",
            "",
            "\t<a <?php echo \\$this->get_render_attribute_string( '$8-third-button-arg' ); ?>>",
            "\t\t<?php print $9_kses(\\$settings['$10_third_button_text']); ?><?php $11_render_icon(\\$settings, '$12_third_button_icon'); ?>",
            "\t</a>",
            "",
            "<?php endif; ?>"
        ],
        "description": "Elementor Custom Control: Button Third Markup"
    },
    "Elementor Custom Control: Repeater Markup": {
        "prefix": "elc_repeater_markup",
        "body": [
            "<?php foreach ( \\$settings['$1_list'] as \\$item ) : ?>",
            "\t$2",
            "<?php endforeach; ?>"
        ],
        "description": "Elementor Custom Control: Repeater Markup"
    },
    "Elementor Custom Control: Repeater Multi Level": {
        "prefix": "elc_repeater_multilevel",
        "body": [
            "\\$repeater = new Repeater();",
            "",
            "\\$repeater->add_control(",
            "\t'slider_title',",
            "\t[",
            "\t\t'label' => esc_html__( 'Title', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t]",
            ");",
            "",
            "\\$feature_repeater = new Repeater();",
            "",
            "\\$feature_repeater->add_control(",
            "\t'feature_text',",
            "\t[",
            "\t\t'label' => esc_html__( 'Text', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::TEXT,",
            "\t]",
            ");",
            "",
            "\\$repeater->add_control(",
            "\t'feature_list',",
            "\t[",
            "\t\t'label' => esc_html__( 'Feature List', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::REPEATER,",
            "\t\t'fields' => \\$feature_repeater->get_controls(),",
            "\t\t'default' => [",
            "\t\t\t[",
            "\t\t\t\t'feature_text' => __( 'Online application form for easy admission', 'rsaddon' ),",
            "\t\t\t],",
            "\t\t\t[",
            "\t\t\t\t'feature_text' => __( 'User-friendly student dashboard', 'rsaddon' ),",
            "\t\t\t],",
            "\t\t],",
            "\t\t'title_field' => '{{{ feature_text }}}',",
            "\t]",
            ");",
            "",
            "\\$this->add_control(",
            "\t'slider_list',",
            "\t[",
            "\t\t'label' => esc_html__( 'Slider List', 'rsaddon' ),",
            "\t\t'type' => Controls_Manager::REPEATER,",
            "\t\t'fields' => \\$repeater->get_controls(),'default' => [",
            "\t\t\t[",
            "\t\t\t\t'slider_title' => __( 'Spoken & Written German Test', 'rsaddon' ),",
            "\t\t\t],",
            "\t\t\t[",
            "\t\t\t\t'slider_title' => __( 'Spoken & Written German Test', 'rsaddon' ),",
            "\t\t\t],",
            "\t\t],",
            "\t\t'title_field' => '{{{ slider_title }}}',",
            "\t]",
            ");"
        ],
        "description": "Elementor Custom Control: Repeater Multi Level"
    },
    "Elementor Custom Control: Repeater Multi Level Markup": {
        "prefix": "elc_repeater_multilevel_markup",
        "body": [
            "<?php foreach ( \\$settings['slider_list'] as \\$slider ) : ?>",
            "\t<?php print $1_kses( \\$slider['slider_title'] ); ?>",
            "\t<?php foreach (\\$slider['feature_list'] as \\$feature) : ?>",
            "\t\t<li>",
            "\t\t\t<?php $2_render_icon(\\$feature, 'feature_icon' ); ?>",
            "\t\t\t<?php print $3_kses( \\$feature['feature_text'] ); ?>",
            "\t\t</li>",
            "\t<?php endforeach; ?>",
            "<?php endforeach; ?>"
        ],
        "description": "Elementor Custom Control: Repeater Multi Level Markup"
    },
    // Render Attribute
    "Elementor Markup: Add Render Attribute": {
        "prefix": "elc_add_render_attr",
        "body": [
            "\\$this->add_render_attribute(",
            "\t'$1',",
            "\t[",
            "\t\t'class' => [",
            "\t\t\t'$2',",
            "\t\t],",
            "\t]",
            ");"
        ],
        "description": "Elementor add_render_attribute with class"
    },
    "Elementor Markup: Print Render Attribute": {
        "prefix": "elc_print_render_attr",
        "body": [
            "<?php \\$this->print_render_attribute_string( '$1' ); ?>"
        ],
        "description": "Elementor print_render_attribute_string"
    }
}
